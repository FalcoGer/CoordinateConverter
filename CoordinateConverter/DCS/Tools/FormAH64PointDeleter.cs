using CoordinateConverter.DCS.Aircraft;
using System;
using System.Windows.Forms;

namespace CoordinateConverter.DCS.Tools
{
    /// <summary>
    /// A tool to delete pointy from the AH64
    /// </summary>
    /// <seealso cref="Form" />
    public partial class FormAH64PointDeleter : Form
    {
        /// <summary>
        /// Gets the number of commands generated by the point deleter.
        /// </summary>
        /// <value>
        /// The number of commands.
        /// </value>
        public int NumberOfCommands { get; private set; } = 0;
        private readonly AH64 selectedAircraft;
        /// <summary>
        /// Initializes a new instance of the <see cref="FormAH64PointDeleter"/> class.
        /// </summary>
        public FormAH64PointDeleter(Form parent, AH64 selectedAircraft)
        {
            InitializeComponent();
            cb_PointType.Items.Clear();
            cb_PointType.DisplayMember = "Text";
            cb_PointType.ValueMember = "Value";
            cb_PointType.Items.Add(new ComboItem<AH64.EPointType>("TG", AH64.EPointType.Target));
            cb_PointType.Items.Add(new ComboItem<AH64.EPointType>("WP/HZ", AH64.EPointType.Waypoint));
            cb_PointType.Items.Add(new ComboItem<AH64.EPointType>("CM", AH64.EPointType.ControlMeasure));
            cb_PointType.SelectedIndex = 0;

            this.selectedAircraft = selectedAircraft;

            ShowDialog(parent);
        }

        private void Cb_PointType_SelectedIndexChanged(object objSender, EventArgs e)
        {
            ComboBox sender = objSender as ComboBox;
            AH64.EPointType pointType = ComboItem<AH64.EPointType>.GetSelectedValue(sender);
            // Update Minima and Maxima
            if (pointType == AH64.EPointType.ControlMeasure)
            {
                nud_FirstPointIdx.Minimum = 51;
                nud_LastPointIdx.Minimum = 51;

                nud_FirstPointIdx.Maximum = 99;
                nud_LastPointIdx.Maximum = 99;
            }
            else
            {
                nud_FirstPointIdx.Minimum = 1;
                nud_LastPointIdx.Minimum = 1;
                
                nud_FirstPointIdx.Maximum = 50;
                nud_LastPointIdx.Maximum = 50;
            }

            // Set Values
            nud_FirstPointIdx.Value = nud_FirstPointIdx.Minimum;
            nud_LastPointIdx.Value = nud_LastPointIdx.Maximum;
        }

        private void Btn_Cancel_Click(object sender, EventArgs e)
        {
            NumberOfCommands = 0;
            Close();
        }

        private void Btn_Ok_Click(object sender, EventArgs e)
        {
            AH64.EPointType pointType = ComboItem<AH64.EPointType>.GetSelectedValue(cb_PointType);
            NumberOfCommands = selectedAircraft.ClearPoints(pointType, (int)nud_FirstPointIdx.Value, (int)nud_LastPointIdx.Value);
            Close();
        }
    }
}
